{"remainingRequest":"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[[\"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/node_modules/docz-utils/lib/named-asset-import.js\",{\"loaderMap\":{\"svg\":{\"ReactComponent\":\"@svgr/webpack?-prettier,-svgo![path]\"}}}]],\"babelrc\":false,\"cacheCompression\":true,\"compact\":true}!/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/src/Shapes.mdx","dependencies":[{"path":"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/src/Shapes.mdx","mtime":1548344047452},{"path":"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/node_modules/cache-loader/dist/cjs.js","mtime":1548349944310},{"path":"/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/node_modules/babel-loader/lib/index.js","mtime":1548349944277}],"contextDependencies":[],"result":["function _typeof(obj){if(typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};}return _typeof(obj);}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key];}}return target;}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key];}return target;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}import React from'react';import{MDXTag}from'@mdx-js/tag';import{GoogleMap,LoadScript,Polygon,Circle,Rectangle,Polyline}from\"react-google-maps-api/lib\";import WithApiKey from\"./WithApiKey\";var layoutProps={};var MDXContent=/*#__PURE__*/function(_React$Component){_inherits(MDXContent,_React$Component);function MDXContent(props){var _this;_classCallCheck(this,MDXContent);_this=_possibleConstructorReturn(this,_getPrototypeOf(MDXContent).call(this,props));_this.layout=null;return _this;}_createClass(MDXContent,[{key:\"render\",value:function render(){var _this$props=this.props,components=_this$props.components,props=_objectWithoutProperties(_this$props,[\"components\"]);return React.createElement(MDXTag,{name:\"wrapper\",components:components},React.createElement(MDXTag,{name:\"h1\",components:components,props:{\"id\":\"shapes\"}},\"Shapes\"),React.createElement(MDXTag,{name:\"pre\",components:components},React.createElement(MDXTag,{name:\"code\",components:components,parentName:\"pre\",props:{\"className\":\"language-jsx\"}},\"const BRISBANE_COORDS = [\\n  { lat: -27.467, lng: 153.027 },\\n  { lat: -23.467, lng: 152.027 },\\n  { lat: -28.567, lng: 149.627 },\\n  { lat: -27.467, lng: 153.027 }\\n]\\n\\nconst SAN_FRANCISCO_COORDS = [\\n  { lat: 37.772, lng: -122.214 },\\n  { lat: 39.772, lng: -121.214 },\\n  { lat: 35.772, lng: -120.214 },\\n  { lat: 37.772, lng: -122.214 }\\n]\\n\\n\\nconst brisbanePolygonOptions = {\\n  fillColor: '#00FF00',\\n  fillOpacity: 1,\\n  strokeColor: '#22FF22',\\n  strokeOpacity: 1,\\n  strokeWeight: 2,\\n  clickable: false,\\n  draggable: false,\\n  editable: false,\\n  geodesic: false,\\n  paths: BRISBANE_COORDS,\\n  zIndex: 1\\n}\\n\\nconst sfPolygonOptions = {\\n  fillColor: '#FF5500',\\n  fillOpacity: 1,\\n  strokeColor: '#FF7700',\\n  strokeOpacity: 1,\\n  strokeWeight: 2,\\n  clickable: false,\\n  draggable: false,\\n  editable: false,\\n  geodesic: false,\\n  paths: SAN_FRANCISCO_COORDS,\\n  zIndex: 1\\n}\\n\\nconst RECTANGLE_BOUNDS = {\\n  north: 38.685,\\n  south: 33.671,\\n  east: -115.234,\\n  west: -118.251\\n}\\n\\nconst POLYLINE_OPTIONS = {\\n  strokeColor: '#FF0000',\\n  strokeOpacity: 1.0,\\n  strokeWeight: 2\\n}\\n\\nconst FLIGHT_PLAN_COORDS = [\\n  { lat: 37.772, lng: -122.214 },\\n  { lat: 21.291, lng: -157.821 },\\n  { lat: -18.142, lng: 178.431 },\\n  { lat: -27.467, lng: 153.027 }\\n]\\n\\nconst circleOptions = {\\n  strokeColor: '#FF0000',\\n  strokeOpacity: 0.8,\\n  strokeWeight: 2,\\n  fillColor: '#FF0000',\\n  fillOpacity: 0.35,\\n  center: {\\n    lat: 34.052,\\n    lng: -118.243\\n  },\\n  radius: 300000,\\n  clickable: false,\\n  draggable: false,\\n  editable: false,\\n  visible: true,\\n  zIndex: 1\\n}\\n\\n\\n<LoadScript\\n  id=\\\"script-loader\\\"\\n  googleMapsApiKey={API_KEY}\\n  language={\\\"en\\\"}\\n  region={\\\"EN\\\"}\\n  version={\\\"weekly\\\"}\\n  libraries={[]}\\n  onLoad={() => console.log(\\\"script loaded\\\")}\\n  loadingElement={<div>Loading...</div>}>\\n\\n  <GoogleMap\\n    id=\\\"basic-map-example\\\"\\n    mapContainerStyle={{\\n      height: \\\"400px\\\",\\n      width: \\\"800px\\\"\\n    }}\\n    zoom={2}\\n    center={{\\n      lat: 0,\\n      lng: -180\\n    }}\\n  >\\n    <Polyline\\n      path={FLIGHT_PLAN_COORDS}\\n      options={polylineOptions}\\n    />\\n\\n    <Polygon\\n      path={BRISBANE_COORDS}\\n      options={brisbanePolygonOptions}\\n    />\\n\\n    <Polygon\\n      path={SAN_FRANCISCO_COORDS}\\n      options={sfPolygonOptions}\\n    />\\n\\n    <Rectangle\\n      bounds={RECTANGLE_BOUNDS}\\n    />\\n\\n    <Circle\\n      options={circleOptions}\\n    />\\n  </GoogleMap>\\n</LoadScript>\\n\")),React.createElement(WithApiKey,null,function(apiKey){return React.createElement(LoadScript,{id:\"script-loader\",googleMapsApiKey:apiKey,language:\"en\",region:\"EN\",version:\"weekly\",libraries:[],onLoad:function onLoad(){return console.log(\"script loaded\");},loadingElement:React.createElement(\"div\",null,\"Loading...\")},React.createElement(GoogleMap,{id:\"shapes-example\",mapContainerStyle:{height:\"400px\",width:\"800px\"},zoom:2,center:{lat:0,lng:-180}},React.createElement(Polyline,{path:[{lat:37.772,lng:-122.214},{lat:21.291,lng:-157.821},{lat:-18.142,lng:178.431},{lat:-27.467,lng:153.027}],options:{strokeColor:'#FF0000',strokeOpacity:1.0,strokeWeight:2}}),React.createElement(Polygon,{path:[{lat:-27.467,lng:153.027},{lat:-23.467,lng:152.027},{lat:-28.567,lng:149.627},{lat:-27.467,lng:153.027}],options:{fillColor:'#00FF00',fillOpacity:1,strokeColor:'#22FF22',strokeOpacity:1,strokeWeight:2,clickable:false,draggable:false,editable:false,geodesic:false,zIndex:1}}),React.createElement(Polygon,{path:[{lat:37.772,lng:-122.214},{lat:39.772,lng:-121.214},{lat:35.772,lng:-120.214},{lat:37.772,lng:-122.214}],options:{fillColor:'#FF5500',fillOpacity:1,strokeColor:'#FF7700',strokeOpacity:1,strokeWeight:2,clickable:false,draggable:false,editable:false,geodesic:false,zIndex:1}}),React.createElement(Rectangle,{bounds:{north:38.685,south:33.671,east:-115.234,west:-118.251}}),React.createElement(Circle,{radius:300000,center:{lat:34.052,lng:-118.243},options:{strokeColor:'#FF0000',strokeOpacity:0.8,strokeWeight:2,fillColor:'#FF0000',fillOpacity:0.35,clickable:false,draggable:false,editable:false,visible:true,zIndex:1}})));}));}}]);return MDXContent;}(React.Component);export{MDXContent as default};MDXContent.__docgenInfo={\"description\":\"\",\"methods\":[],\"displayName\":\"MDXContent\"};",{"version":3,"sources":["/Users/justfly/projects/react-google-maps-api/packages/react-google-maps-api-docz/src/Shapes.mdx"],"names":["React","MDXTag","GoogleMap","LoadScript","Polygon","Circle","Rectangle","Polyline","WithApiKey","layoutProps","MDXContent","props","layout","components","apiKey","console","log","height","width","lat","lng","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","clickable","draggable","editable","geodesic","zIndex","north","south","east","west","visible","Component"],"mappings":"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","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { GoogleMap, LoadScript, Polygon, Circle, Rectangle, Polyline } from \"react-google-maps-api/lib\";\nimport WithApiKey from \"./WithApiKey\";\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"shapes\"}}>{`Shapes`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-jsx\"}}>{`const BRISBANE_COORDS = [\n  { lat: -27.467, lng: 153.027 },\n  { lat: -23.467, lng: 152.027 },\n  { lat: -28.567, lng: 149.627 },\n  { lat: -27.467, lng: 153.027 }\n]\n\nconst SAN_FRANCISCO_COORDS = [\n  { lat: 37.772, lng: -122.214 },\n  { lat: 39.772, lng: -121.214 },\n  { lat: 35.772, lng: -120.214 },\n  { lat: 37.772, lng: -122.214 }\n]\n\n\nconst brisbanePolygonOptions = {\n  fillColor: '#00FF00',\n  fillOpacity: 1,\n  strokeColor: '#22FF22',\n  strokeOpacity: 1,\n  strokeWeight: 2,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  geodesic: false,\n  paths: BRISBANE_COORDS,\n  zIndex: 1\n}\n\nconst sfPolygonOptions = {\n  fillColor: '#FF5500',\n  fillOpacity: 1,\n  strokeColor: '#FF7700',\n  strokeOpacity: 1,\n  strokeWeight: 2,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  geodesic: false,\n  paths: SAN_FRANCISCO_COORDS,\n  zIndex: 1\n}\n\nconst RECTANGLE_BOUNDS = {\n  north: 38.685,\n  south: 33.671,\n  east: -115.234,\n  west: -118.251\n}\n\nconst POLYLINE_OPTIONS = {\n  strokeColor: '#FF0000',\n  strokeOpacity: 1.0,\n  strokeWeight: 2\n}\n\nconst FLIGHT_PLAN_COORDS = [\n  { lat: 37.772, lng: -122.214 },\n  { lat: 21.291, lng: -157.821 },\n  { lat: -18.142, lng: 178.431 },\n  { lat: -27.467, lng: 153.027 }\n]\n\nconst circleOptions = {\n  strokeColor: '#FF0000',\n  strokeOpacity: 0.8,\n  strokeWeight: 2,\n  fillColor: '#FF0000',\n  fillOpacity: 0.35,\n  center: {\n    lat: 34.052,\n    lng: -118.243\n  },\n  radius: 300000,\n  clickable: false,\n  draggable: false,\n  editable: false,\n  visible: true,\n  zIndex: 1\n}\n\n\n<LoadScript\n  id=\"script-loader\"\n  googleMapsApiKey={API_KEY}\n  language={\"en\"}\n  region={\"EN\"}\n  version={\"weekly\"}\n  libraries={[]}\n  onLoad={() => console.log(\"script loaded\")}\n  loadingElement={<div>Loading...</div>}>\n\n  <GoogleMap\n    id=\"basic-map-example\"\n    mapContainerStyle={{\n      height: \"400px\",\n      width: \"800px\"\n    }}\n    zoom={2}\n    center={{\n      lat: 0,\n      lng: -180\n    }}\n  >\n    <Polyline\n      path={FLIGHT_PLAN_COORDS}\n      options={polylineOptions}\n    />\n\n    <Polygon\n      path={BRISBANE_COORDS}\n      options={brisbanePolygonOptions}\n    />\n\n    <Polygon\n      path={SAN_FRANCISCO_COORDS}\n      options={sfPolygonOptions}\n    />\n\n    <Rectangle\n      bounds={RECTANGLE_BOUNDS}\n    />\n\n    <Circle\n      options={circleOptions}\n    />\n  </GoogleMap>\n</LoadScript>\n`}</MDXTag></MDXTag>\n<WithApiKey>\n  {\n    (apiKey) => (\n      <LoadScript\n        id=\"script-loader\"\n        googleMapsApiKey={apiKey}\n        language={\"en\"}\n        region={\"EN\"}\n        version={\"weekly\"}\n        libraries={[]}\n        onLoad={() => console.log(\"script loaded\")}\n        loadingElement={<div>Loading...</div>}>\n    <GoogleMap\n      id=\"shapes-example\"\n      mapContainerStyle={{\n        height: \"400px\",\n        width: \"800px\"\n      }}\n      zoom={2}\n      center={{\n        lat: 0,\n        lng: -180\n      }}\n    >\n    <Polyline\n      path={[\n      { lat: 37.772, lng: -122.214 },\n      { lat: 21.291, lng: -157.821 },\n      { lat: -18.142, lng: 178.431 },\n      { lat: -27.467, lng: 153.027 }\n      ]}\n      options={{\n        strokeColor: '#FF0000',\n        strokeOpacity: 1.0,\n        strokeWeight: 2\n      }}\n    />\n\n    <Polygon\n      path={[\n        { lat: -27.467, lng: 153.027 },\n        { lat: -23.467, lng: 152.027 },\n        { lat: -28.567, lng: 149.627 },\n        { lat: -27.467, lng: 153.027 }\n      ]}\n      options={{\n        fillColor: '#00FF00',\n        fillOpacity: 1,\n        strokeColor: '#22FF22',\n        strokeOpacity: 1,\n        strokeWeight: 2,\n        clickable: false,\n        draggable: false,\n        editable: false,\n        geodesic: false,\n        zIndex: 1\n      }}\n    />\n\n    <Polygon\n      path={[\n        { lat: 37.772, lng: -122.214 },\n        { lat: 39.772, lng: -121.214 },\n        { lat: 35.772, lng: -120.214 },\n        { lat: 37.772, lng: -122.214 }\n      ]}\n      options={{\n        fillColor: '#FF5500',\n        fillOpacity: 1,\n        strokeColor: '#FF7700',\n        strokeOpacity: 1,\n        strokeWeight: 2,\n        clickable: false,\n        draggable: false,\n        editable: false,\n        geodesic: false,\n        zIndex: 1\n      }}\n    />\n\n    <Rectangle\n      bounds={{\n        north: 38.685,\n        south: 33.671,\n        east: -115.234,\n        west: -118.251\n      }}\n    />\n\n    <Circle\n    radius={300000}\n    center={{\n      lat: 34.052,\n      lng: -118.243\n    }}\n    options={{\n      strokeColor: '#FF0000',\n      strokeOpacity: 0.8,\n      strokeWeight: 2,\n      fillColor: '#FF0000',\n      fillOpacity: 0.35,\n      clickable: false,\n      draggable: false,\n      editable: false,\n      visible: true,\n      zIndex: 1\n    }}\n    />\n\n    </GoogleMap>\n  </LoadScript>\n)\n}\n</WithApiKey>\n           </MDXTag>\n  }\n}\n  "]}]}